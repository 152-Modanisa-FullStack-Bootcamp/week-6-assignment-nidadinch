// Code generated by MockGen. DO NOT EDIT.
// Source: controller/controller.go

// Package mock is a generated GoMock package.
package mock

import (
	http "net/http"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIController is a mock of IController interface.
type MockIController struct {
	ctrl     *gomock.Controller
	recorder *MockIControllerMockRecorder
}

// MockIControllerMockRecorder is the mock recorder for MockIController.
type MockIControllerMockRecorder struct {
	mock *MockIController
}

// NewMockIController creates a new mock instance.
func NewMockIController(ctrl *gomock.Controller) *MockIController {
	mock := &MockIController{ctrl: ctrl}
	mock.recorder = &MockIControllerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIController) EXPECT() *MockIControllerMockRecorder {
	return m.recorder
}

// CreateWallet mocks base method.
func (m *MockIController) CreateWallet(w http.ResponseWriter, r *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "CreateWallet", w, r)
}

// CreateWallet indicates an expected call of CreateWallet.
func (mr *MockIControllerMockRecorder) CreateWallet(w, r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateWallet", reflect.TypeOf((*MockIController)(nil).CreateWallet), w, r)
}

// GetWallet mocks base method.
func (m *MockIController) GetWallet(w http.ResponseWriter, r *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "GetWallet", w, r)
}

// GetWallet indicates an expected call of GetWallet.
func (mr *MockIControllerMockRecorder) GetWallet(w, r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetWallet", reflect.TypeOf((*MockIController)(nil).GetWallet), w, r)
}

// Handle mocks base method.
func (m *MockIController) Handle(w http.ResponseWriter, r *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Handle", w, r)
}

// Handle indicates an expected call of Handle.
func (mr *MockIControllerMockRecorder) Handle(w, r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Handle", reflect.TypeOf((*MockIController)(nil).Handle), w, r)
}

// UpdateWallet mocks base method.
func (m *MockIController) UpdateWallet(w http.ResponseWriter, r *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "UpdateWallet", w, r)
}

// UpdateWallet indicates an expected call of UpdateWallet.
func (mr *MockIControllerMockRecorder) UpdateWallet(w, r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateWallet", reflect.TypeOf((*MockIController)(nil).UpdateWallet), w, r)
}

// Wallets mocks base method.
func (m *MockIController) Wallets(w http.ResponseWriter, r *http.Request) {
	m.ctrl.T.Helper()
	m.ctrl.Call(m, "Wallets", w, r)
}

// Wallets indicates an expected call of Wallets.
func (mr *MockIControllerMockRecorder) Wallets(w, r interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Wallets", reflect.TypeOf((*MockIController)(nil).Wallets), w, r)
}
